stages:
  - build
  - test
  - package
  - deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_IMAGE: "$CI_REGISTRY_IMAGE"
  DOCKER_TAG: "$CI_COMMIT_SHORT_SHA"

cache:
  paths:
    - .m2/repository/
    - target/

build:
  stage: build
  image: maven:3.8.6-openjdk-17
  script:
    - mvn compile

test:
  stage: test
  image: maven:3.8.6-openjdk-17
  services:
    - name: mysql:8.0
      alias: mysql
      command: ["--default-authentication-plugin=mysql_native_password"]
  variables:
    SPRING_PROFILES_ACTIVE: "test"
    SPRING_DATASOURCE_URL: "jdbc:mysql://mysql:3306/springdb_test?createDatabaseIfNotExist=true"
    SPRING_DATASOURCE_USERNAME: "root"
    SPRING_DATASOURCE_PASSWORD: ""
  script:
    - mvn test -Dspring.profiles.active=test

package:
  stage: package
  image: maven:3.8.6-openjdk-17
  script:
    - mvn package -DskipTests
  artifacts:
    paths:
      - target/*.jar

docker-build:
  stage: package
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: "1"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build -t "$DOCKER_IMAGE:$DOCKER_TAG" .
    - docker push "$DOCKER_IMAGE:$DOCKER_TAG"
    - docker tag "$DOCKER_IMAGE:$DOCKER_TAG" "$DOCKER_IMAGE:latest"
    - docker push "$DOCKER_IMAGE:latest"

deploy-staging:
  stage: deploy
  image: alpine:3.16
  before_script:
    - apk add --no-cache openssh-client curl
    - mkdir -p ~/.ssh
    - echo "$STAGING_SSH_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - ssh user@staging-server "docker pull $DOCKER_IMAGE:$DOCKER_TAG"
    - ssh user@staging-server "docker-compose -f /opt/app/docker-compose.staging.yml up -d"
    - sleep 30
    - ssh user@staging-server "curl -f http://localhost:8080/actuator/health || exit 1"
  only:
    - main